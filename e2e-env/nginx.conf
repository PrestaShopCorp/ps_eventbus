user  nginx;
worker_processes  auto;

error_log  /dev/stdout notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  escape=none '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" \n$request_body';

    access_log  /dev/stdout  main;
    rewrite_log on;
    keepalive_timeout  65;
    gzip  on;

    # @see http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver
    # @see https://medium.com/@huynhquangthao/how-does-the-docker-dns-work-ab69bde4c82a
    resolver 127.0.0.11 ipv6=off valid=10s;
    resolver_timeout 10s;

    server {
        location /collector/v1 {
            set $backend "http://cloudsync-mock:3333";
            rewrite /collector/v1/?(.*) /$1 break;
            proxy_pass $backend;
        }

        # legacy alias to /collector
        location /collector/ {
            set $backend "http://cloudsync-mock:3333";
            rewrite /collector/?(.*) /$1 break;
            proxy_pass $backend;
        }
        
        location /sync/v1/ {
            set $backend "http://cloudsync-mock:3232";
            rewrite /sync/v1/?(.*) /$1 break;
            proxy_pass $backend;
        }
        
        # legacy alias to /sync/v1
        location /sync-api/ {
            set $backend "http://cloudsync-mock:3232";
            rewrite /sync-api/?(.*) /$1 break;
            proxy_pass $backend;
        }

        location /live-sync-api/v1/ {
            set $backend "http://cloudsync-mock:3434";
            rewrite /live-sync-api/v1/?(.*) /$1 break;
            proxy_pass $backend;
        }

        location /mock-probe/ {
            set $backend "http://cloudsync-mock:8080";
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_pass $backend;
        }

        location /prestashop {
            set $frontend                    "http://prestashop:80";
            proxy_set_header Host            "localhost:8000";
            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            rewrite /prestashop/?(.*) /$1 break;
            proxy_pass $frontend;
        }

        location /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
}
