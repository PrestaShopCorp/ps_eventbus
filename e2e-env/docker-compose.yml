x-service:
  prestashop-base: &prestashop-base
    image: ${DOCKER_IMAGE_PRESTASHOP:?See e2e-env/.env.dist}
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-sI",
          "-H",
          "Host: localhost:${HOST_PORT_BIND_PRESTASHOP:?See e2e-env/.env.dist}",
          "http://localhost:80/index.php?fc=module&module=ps_eventbus&controller=apiHealthCheck",
        ]
      interval: 30s
    environment:
      - ON_INIT_SCRIPT_FAILURE=fail
      - DEBUG_MODE=true
      - INIT_SCRIPTS_USER=root
      - PS_DOMAIN=localhost:${HOST_PORT_BIND_PRESTASHOP}
    ports:
      - ${HOST_PORT_BIND_PRESTASHOP:?See e2e-env/.env.dist}:80

services:
  # This service ir for local development and testing with ps-accounts mock
  prestashop-local:
    <<: *prestashop-base
    environment:
      - PS_DOMAIN=localhost:${HOST_PORT_BIND_PRESTASHOP}
    volumes:
      - ..:/var/www/html/modules/ps_eventbus:rw
      - ./init-scripts/install-ps-accounts-mock.sh:/tmp/init-scripts/install-ps-accounts-mock.sh:ro
      - ./init-scripts/install-ps-eventbus.sh:/tmp/init-scripts/install-ps-eventbus.sh:ro
      # Notice: you might enable this if your uid is not 1000, or encounter permission issues
      # - /var/www/html/modules/ps_eventbus/vendor
      # - /var/www/html/modules/ps_eventbus/tools/vendor
    profiles: [localhost, cicd]

  # This service is for testing with real ps-accounts, and exposed the service to the internet
  prestashop-exposed:
    <<: *prestashop-base
    environment:
      - PS_DOMAIN=${TUNNEL_NAME}
      - PS_PROTOCOL=https
    ports:
      - ${HOST_PORT_BIND_PRESTASHOP:?See e2e-env/.env.dist}:80
    volumes:
      - ..:/var/www/html/modules/ps_eventbus:rw
      - ./init-scripts/install-ps-eventbus.sh:/tmp/init-scripts/install-ps-eventbus.sh:ro
      # Notice: you might enable this if your uid is not 1000, or encounter permission issues
      # - /var/www/html/modules/ps_eventbus/vendor
      # - /var/www/html/modules/ps_eventbus/tools/vendor
    profiles: [cloudflared]

  mysql:
    image: mariadb:${DOCKER_VERSION_MARIADB:?See e2e-env/.env.dist}
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MARIADB_USER=prestashop
      - MARIADB_PASSWORD=prestashop
      - MARIADB_ROOT_PASSWORD=prestashop
      - MARIADB_PORT=3306
      - MARIADB_DATABASE=prestashop
    ports:
      - ${HOST_PORT_BIND_MYSQL:?See e2e-env/.env.dist}:3306

  phpmyadmin:
    image: phpmyadmin:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - ${HOST_PORT_BIND_PHP_MY_ADMIN:?See e2e-env/.env.dist}:80
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=prestashop
      - PMA_PASSWORD=prestashop
      - MYSQL_ROOT_PASSWORD=prestashop
    networks:
      - prestashop
    profiles: [localhost, cloudflared]

  cloudsync-mock:
    build:
      context: ./cloudsync-mock
      dockerfile: Dockerfile
    environment:
      - RUN_IN_DOCKER=1
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://localhost:8080"]
    volumes:
      - ./cloudsync-mock/src:/home/node/src:ro
    ports:
      - ${SYNC_API_PORT:?See e2e-env/.env.dist}:3232
      - ${COLLECTOR_API_PORT:?See e2e-env/.env.dist}:3333
      - ${LIVE_SYNC_API_PORT:?See e2e-env/.env.dist}:3434
      - ${WS_PORT:?See e2e-env/.env.dist}:8080

  reverse-proxy:
    image: nginx:stable-alpine
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://localhost:80/nginx_status"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro,cached
    command: [nginx-debug, "-g", "daemon off;"]
    ports:
      - ${HOST_PORT_BIND_CLOUDSYNC_REVERSE_PROXY:?See e2e-env/.env.dist}:80

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run $${TUNNEL_NAME}
    environment:
      - TUNNEL_CRED_FILE=/credentials.json
      - TUNNEL_URL=http://prestashop-exposed:80
      - TUNNEL_HTTP_HOST_HEADER=${TUNNEL_NAME}
    volumes:
      - ./credentials.json:/credentials.json
    profiles: [cloudflared]
