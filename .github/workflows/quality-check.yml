name: Quality Control

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - "main"

jobs:
  php-linter:
    name: PHP Syntax check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        php_version: ["7.1", "7.2", "7.3", "7.4", "8.0", "8.1", "8.2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: PHP syntax checker ${{ matrix.php_version }}
        run: PHP_VERSION=${{ matrix.php_version }} make docker-php-lint

  composer-validate:
    name: Composer validate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run composer validate
        run: make composer-validate

  php-cs-fixer:
    name: PHP-CS-FIXER
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: Run PHP-CS-Fixer
        run: make lint

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        presta_version: ["1.7.8.7"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: PHPStan PrestaShop 1.7.8.7
        run: PS_VERSION="1.7.8.7" make phpstan

  phpunit:
    name: PHP Unit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: PHP unit
        run: make phpunit

  # coverage:
  #   name: Generate the code coverage
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Cache vendor folder
  #       uses: actions/cache@v3
  #       with:
  #         path: vendor
  #         key: php-${{ hashFiles('composer.lock') }}
  #     - name: PHP unit with coverage
  #       run: make phpunit-coverage
  #     - name: üéÅ Publishing Allure artifact to GitHub Actions
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: allure-reports
  #         path: allure-reports
  #     - name: üéÅ Publishing Code coverage report to GitHub Actions
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: coverage-reports
  #         path: coverage-reports
