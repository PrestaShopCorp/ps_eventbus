name: Quality Control

env:
  DOCKER_COMPOSE_VERSION: v2.23.3

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - "main"

jobs:
  php-linter:
    name: PHP Syntax check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        php_version: ["7.1", "7.2", "7.3", "7.4", "8.0", "8.1", "8.2"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: PHP syntax checker ${{ matrix.php_version }}
        run: make docker-php-lint
        env:
          PHP_VERSION: ${{ matrix.php_version }}
          TESTING_IMAGE: php:${{ matrix.php_version }}

  composer-validate:
    name: Composer validate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run composer validate
        run: make composer-validate

  php-cs-fixer:
    name: PHP-CS-FIXER
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: Run PHP-CS-Fixer
        run: make lint

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        ps_version: ["1.7.8.10", "8.1.1"]
        # @TODO: "1.6.1.24" is temporarily disabled here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: PHPStan PrestaShop ${{ matrix.ps_version }}
        run: PS_VERSION="${{ matrix.ps_version }}" make phpstan

  phpunit:
    name: PHP Unit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: PHP unit
        run: make phpunit

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        ps_version: [ "1.7.8.10", "8.1.1", "latest" ]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: e2e/pnpm-lock.yaml

      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: Install docker compose
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          rm -f $DOCKER_CONFIG/cli-plugins/docker-compose
          curl -SL https://github.com/docker/compose/releases/download/${{ env.DOCKER_COMPOSE_VERSION }}/docker-compose-linux-x86_64 \
          -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

      - name: Install dependencies and setup e2e
        run: pnpm install --no-optional
        working-directory: e2e

      - name: Setup e2e-env with Prestashop ${{ matrix.ps_version }}
        run: |
          cp .env.dist .env
          docker compose build
          docker compose up --detach --wait
        env:
          DOCKER_IMAGE_PRESTASHOP: prestashop/prestashop-flashlight:${{matrix.ps_version}}
        working-directory: e2e-env

      - name: Run e2e:tests with Prestashop ${{ matrix.ps_version }}
        run: pnpm test:e2e
        working-directory: e2e
