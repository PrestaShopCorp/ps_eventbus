name: EVENTBUS E2E TESTS

on:
  workflow_dispatch:
    inputs:
      incremental:
        type: boolean
        description: Run incremental campaign
        required: false
        default: true
      full:
        type: boolean
        description: Run fullsync campaign
        required: false
        default: true
      ps_latest:
        type: boolean
        description: Latest available flashlight
        required: false
        default: true
      ps_8_1_7:
        type: boolean
        description: Flashlight 8.1.7-nginx
        required: false
        default: true
      ps_8_0_5:
        type: boolean
        description: Flashlight 8.0.5-nginx
        required: false
        default: true
      ps_1_7_8_11:
        type: boolean
        description: Flashlight 1.7.8.11-nginx
        required: false
        default: true
      ps_1_7_7_8:
        type: boolean
        description: Flashlight 1.7.7.8-nginx
        required: false
        default: true
      ps_1_6_1_11:
        type: boolean
        description: Flashlight 1.6.1.11-nginx
        required: false
        default: true
env:
  NODE_BUILDER_VERSION: "20"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate matrix JSON
        id: set-matrix
        run: |
          echo "📦 Building matrix…"

          campaigns=()
          [[ "${{ inputs.incremental }}" == "true" ]] && campaigns+=("incremental")
          [[ "${{ inputs.full }}" == "true" ]] && campaigns+=("full")

          versions=()
          [[ "${{ inputs.ps_latest }}" == "true" ]] && versions+=("latest")
          [[ "${{ inputs.ps_8_1_7 }}" == "true" ]] && versions+=("8.1.7-nginx")
          [[ "${{ inputs.ps_8_0_5 }}" == "true" ]] && versions+=("8.0.5-nginx")
          [[ "${{ inputs.ps_1_7_8_11 }}" == "true" ]] && versions+=("1.7.8.11-nginx")
          [[ "${{ inputs.ps_1_7_7_8 }}" == "true" ]] && versions+=("1.7.7.8-nginx")
          [[ "${{ inputs.ps_1_6_1_11 }}" == "true" ]] && versions+=("1.6.1.11-nginx")

          # fallback si vide → on prend tout
          [[ "${#campaigns[@]}" -eq 0 ]] && campaigns=("incremental" "full")
          [[ "${#versions[@]}" -eq 0 ]] && versions=("latest" "8.1.7-nginx" "8.0.5-nginx" "1.7.8.11-nginx" "1.7.7.8-nginx" "1.6.1.11-nginx")

          # build matrix
          matrix="["
          for c in "${campaigns[@]}"; do
            for v in "${versions[@]}"; do
              matrix+='{"campaign":"'"$c"'","ps_version":"'"$v"'","eventbus_version":"latest"},'
            done
          done
          matrix="${matrix%,}"  # remove last comma
          matrix+="]"

          echo "Generated matrix:"
          echo "$matrix"

          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  e2e_tests:
    name: Run matrix
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    env:
      CAMPAIGN: ${{ matrix.campaign }}
      DOCKER_IMAGE_PRESTASHOP: prestashop/prestashop-flashlight:${{ matrix.ps_version }}
      EVENTBUS_VERSION: ${{ matrix.eventbus_version }}
      HOST_PORT_BIND_PRESTASHOP: 8000
      HOST_PORT_BIND_MYSQL: 3306
      HOST_PORT_BIND_PHP_MY_ADMIN: 6060
      HOST_PORT_BIND_CLOUDSYNC_REVERSE_PROXY: 3030
      SYNC_API_PORT: 3232
      COLLECTOR_API_PORT: 3333
      LIVE_SYNC_API_PORT: 3434
      WS_PORT: 8080

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_BUILDER_VERSION }}
          cache: "pnpm"
          cache-dependency-path: e2e/V2/pnpm-lock.yaml

      - name: Cache vendor folder
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: install php dependencies
        run: composer install

      - name: Install tests dependencies 👨🏻‍💻
        run: pnpm install -P
        working-directory: ./e2e/V2

      - name: Setup e2e-env with Prestashop ${{ matrix.ps_version }}
        run: |
          cp .env.dist .env
          docker compose build
          docker compose --profile cicd up --detach --wait
        env:
          DOCKER_IMAGE_PRESTASHOP: prestashop/prestashop-flashlight:${{matrix.ps_version}}
        working-directory: e2e-env

      - name: Install Playwright
        run: pnpm playwright install --with-deps
        working-directory: ./e2e/V2

      - name: Run ${{ matrix.campaign }} tests 🧪
        run: pnpm run test:${{ matrix.campaign }}
        working-directory: ./e2e/V2

      - name: Set date variable
        shell: bash
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Upload Playwright Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ${{ env.PLAYWRIGHT_NAME }}
          path: ./e2e/V2/playwright-report
        env:
          PLAYWRIGHT_NAME: ${{ matrix.ps_version }}-${{ matrix.campaign }}-${{ matrix.eventbus_version }}-playwright-report-${{ env.DATE }}
