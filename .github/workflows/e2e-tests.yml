name: üß™ EVENTBUS E2E TESTS

on:
  workflow_dispatch:
    inputs:
      incremental:
        type: boolean
        description: Run incremental-sync campaign
        required: false
        default: true
      full:
        type: boolean
        description: Run full-sync campaign
        required: false
        default: false
      ps_latest:
        type: boolean
        description: Latest available flashlight
        required: false
        default: true
      ps_8_1_7:
        type: boolean
        description: Flashlight 8.1.7-nginx
        required: false
        default: true
      ps_8_0_5:
        type: boolean
        description: Flashlight 8.0.5-nginx
        required: false
        default: true
      ps_1_7_8_11:
        type: boolean
        description: Flashlight 1.7.8.11-nginx
        required: false
        default: true
      ps_1_7_7_8:
        type: boolean
        description: Flashlight 1.7.7.8-nginx
        required: false
        default: true
      ps_1_6_1_11:
        type: boolean
        description: Flashlight 1.6.1.11-nginx
        required: false
        default: true

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  NODE_BUILDER_VERSION: "20"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: üß© G√©n√©ration de la matrice de campagnes/versions
        id: set-matrix
        run: |
          echo "üì¶ Building matrix‚Ä¶"
          # (reste identique)

  e2e_tests:
    name: üöÄ Run E2E Matrix
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    env:
      CAMPAIGN: ${{ matrix.campaign }}
      DOCKER_IMAGE_PRESTASHOP: prestashop/prestashop-flashlight:${{ matrix.ps_version }}
      HOST_PORT_BIND_PRESTASHOP: 8000
      HOST_PORT_BIND_MYSQL: 3306
      HOST_PORT_BIND_PHP_MY_ADMIN: 6060
      HOST_PORT_BIND_CLOUDSYNC_REVERSE_PROXY: 3030
      SYNC_API_PORT: 3232
      COLLECTOR_API_PORT: 3333
      LIVE_SYNC_API_PORT: 3434
      WS_PORT: 8080

    steps:
      - name: üì• Checkout du d√©p√¥t
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: üì¶ Installation de pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_BUILDER_VERSION }}
          cache: "pnpm"
          cache-dependency-path: e2e/V2/pnpm-lock.yaml

      - name: üóÉÔ∏è Cache du dossier vendor PHP
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: üß∞ Installation des d√©pendances PHP
        run: composer install

      - name: üêò Setup de l'environnement Prestashop ${{ matrix.ps_version }}
        run: |
          cp .env.dist .env
          docker compose build
          docker compose --profile cicd up --detach --wait
        env:
          DOCKER_IMAGE_PRESTASHOP: prestashop/prestashop-flashlight:${{ matrix.ps_version }}
        working-directory: ./e2e-env

      - name: üì¶ Installation des d√©pendances tests (V1)
        run: pnpm install
        working-directory: ./e2e

      - name: üì¶ Installation des d√©pendances tests (V2)
        run: pnpm install
        working-directory: ./e2e/V2

      - name: üé≠ Installation de Playwright
        run: pnpm playwright install --with-deps
        working-directory: ./e2e/V2

      - name: üß™ Ex√©cution des tests ${{ matrix.campaign }}
        run: pnpm run test:${{ matrix.campaign }}
        working-directory: ./e2e/V2

      - name: üóÇÔ∏è Upload des rapports de tests Playwright
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ${{ matrix.ps_version }}-${{ matrix.campaign }}-playwright-report
          path: ./e2e/V2/playwright-report

      - name: üìä Analyse des r√©sultats
        id: parse
        run: |
          REPORT=playwright-report/report.json
          # ... parsing code ...

      - name: üì£ Envoi notification Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"üß™ R√©sultats des tests Playwright - *${{ matrix.campaign }}* sur *version ${{ matrix.ps_version }}*\",
            \"attachments\": [{
              \"color\": \"${{ steps.parse.outputs.failed == '0' && '#36a64f' || '#ff0000' }}\",
              \"fields\": [
                {\"title\": \"Campagne\", \"value\": \"${{ matrix.campaign }}\", \"short\": true},
                {\"title\": \"Version PS\", \"value\": \"${{ matrix.ps_version }}\", \"short\": true},
                {\"title\": \"Total\", \"value\": \"${{ steps.parse.outputs.total }}\", \"short\": true},
                {\"title\": \"‚úÖ Passed\", \"value\": \"${{ steps.parse.outputs.passed }}\", \"short\": true},
                {\"title\": \"‚ùå Failed\", \"value\": \"${{ steps.parse.outputs.failed }}\", \"short\": true},
                {\"title\": \"‚è≠ Skipped\", \"value\": \"${{ steps.parse.outputs.skipped }}\", \"short\": true},
                {\"title\": \"‚è± Duration\", \"value\": \"${{ steps.parse.outputs.duration }}s\", \"short\": true},
                {\"title\": \"üìé Rapport\", \"value\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\", \"short\": false}
              ]
            }]
          }" $SLACK_WEBHOOK_URL
